name: node-task-app

on:
  push:
    branches: [master]
env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # ðŸš€ Build and push backend image
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: routparesh/task-tracker-backend-app:${{ env.IMAGE_TAG }}

      # ðŸš€ Build and push frontend image
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: routparesh/task-tracker-frontend-app:${{ env.IMAGE_TAG }}

      # ðŸ›  Update image tags in Kubernetes deployment YAMLs
      - name: Update image tags in Kubernetes manifests
        run: |
          sed -i "s|routparesh/task-tracker-backend-app:.*|routparesh/task-tracker-backend-app:${{ env.IMAGE_TAG }}|g" k8s/manifests/backend/deployment.yaml
          sed -i "s|routparesh/task-tracker-frontend-app:.*|routparesh/task-tracker-frontend-app:${{ env.IMAGE_TAG }}|g" k8s/manifests/frontend/deployment.yaml

      # âœ… Commit and push updated YAML
      - name: Commit updated image tags
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}
          git add k8s/manifests/backend/deployment.yaml k8s/manifests/frontend/deployment.yaml
          git commit -m "Update image tags to ${{ env.IMAGE_TAG }}"
          git push origin HEAD:master

      # ðŸ”„ Optional: Trigger Argo CD sync (if not using auto-sync)
      # - name: Trigger Argo CD Sync
      #   run: |
      #     curl -k -H "Authorization: Bearer $ARGOCD_TOKEN" \
      #     -X POST $ARGOCD_SERVER/api/v1/applications/node-task-app/sync
      #   env:
      #     ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
      #     ARGOCD_SERVER: https://argocd.example.com
